#include "MeMCore.h"
#include <SoftwareSerial.h>


#define TURNDURATION 2.9156
#define left -90
#define right 90
#define around 180




MeDCMotor motorleft(M1);
MeDCMotor motorright(M2);
MeLineFollower linesensor(PORT_1);  //D11, D12
MeUltrasonicSensor rightsensor(PORT_2);  //D09, D10
MeInfraredReceiver leftsensor(PORT_3);  //A2, A3
MeColorSensor coloursensor(PORT_4);  //A0, A1    (A1 & A2 feed the 2 to 4 decoder, A0 & A3 receive inputs from the sensors respectively)


pinMode.analogRead(A0);
pinMode.analogRead(A3);
pinMode.digitalWrite(A1);
pinMode.digitalWrite(A2);



void setup()
{
  Serial.begin(9600);
  leftsensor.begin();
}




void turn(int degree)
{
  if(degree < 0)
  { 
    degree *= -1;
    motorleft.run(255);
    motorright.run(255);
  }
  else
  {
    motorleft.run(-255);
    motorright.run(-255);
  }
  delay(TURNDURATION * degree);
}






void loop()
{
  int rightdistance = ultraSensor.distanceCm();
  int leftdistance = leftsensor.read();  
  int linesensor = linesensor.readSensors();

  
  
  Serial.print("rightdistance : ");
  Serial.print(rightdistance);
  Serial.println(" cm");

  
  if(rightdistance < 8)
  {
    motorleft.run(-220);
  }
  else
  {
    motorleft.run(-240);
  }


  

  switch(linesensor)
  {
    case S1_IN_S2_IN: Serial.println("Sensor 1 and 2 are inside of black line");
    motorleft.run(0);
    motorright.run(0);
    break;
    case S1_IN_S2_OUT: Serial.println("Sensor 1 is inside of black line");
    motorleft.run(0);
    motorright.run(50);
    break;
    case S1_OUT_S2_IN: Serial.println("Sensor 2 is inside of black line");
    motorleft.run(-50);
    motorright.run(0);
    break;
    case S1_OUT_S2_OUT: Serial.println("Sensor 1 and 2 are outside of black line");
    motorleft.run(-240);
    motorright.run(255);
    break;
    default: break;
  }
 delay(100);
}
